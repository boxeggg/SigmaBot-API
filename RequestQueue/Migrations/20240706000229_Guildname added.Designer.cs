// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SigmaBotAPI.Data;

#nullable disable

namespace SigmaBotAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240706000229_Guildname added")]
    partial class Guildnameadded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("SigmaBotAPI.Data.Entities.SongEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Thumbnail_Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("SongEntity");
                });

            modelBuilder.Entity("SigmaBotAPI.Data.Entities.StatusEntity", b =>
                {
                    b.Property<string>("GuildId")
                        .HasColumnType("TEXT");

                    b.Property<string>("GuildName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LoopMode")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("OnVoiceChannel")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SkipQueued")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Volume")
                        .HasColumnType("REAL");

                    b.HasKey("GuildId");

                    b.ToTable("StatusEntity");
                });

            modelBuilder.Entity("SigmaBotAPI.Data.Entities.SongEntity", b =>
                {
                    b.HasOne("SigmaBotAPI.Data.Entities.StatusEntity", "Status")
                        .WithMany("SongsQueue")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SigmaBotAPI.Data.Entities.StatusEntity", b =>
                {
                    b.Navigation("SongsQueue");
                });
#pragma warning restore 612, 618
        }
    }
}
